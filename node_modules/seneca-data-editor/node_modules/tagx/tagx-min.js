/* Copyright (c) 2011-2013 Richard Rodger, MIT License, https://github.com/rjrodger/tagx */
(function(){"use strict";function e(e){var r=/^[ ,]*(.*?)[ ,]*$/g,n=/[ ,]+/g,t=r.exec(e),i=t&&t[1]||"",a=i.split(n);return a=u.filter(a,function(e){return 0<e.length})}function r(e,r){var n=!0,t=!0,i=!1,a=e,c="!"+e;"!"==a[0]&&(t=!1,i=!0,c=a,a=a.substring(1));for(var o=0;o<r.length;o++)if(t){if(a==r[o]){n=!1;break}if(c==r[o]){r.splice(o,1),n=!1;break}}else if(i){if(a==r[o]){r.splice(o,1),n=!1;break}if(c==r[o]){n=!1;break}}n&&r.push(e)}function n(t,i,a){t.case=void 0==t.case?!0:!!t.case,t.clean=void 0==t.clean?!0:!!t.clean,a=a||{};var c=[];if(u.each(i,function(i){var o=e(i);if(t.case||(o=u.map(o,function(e){return e.toLowerCase()})),t.expand)for(var f=0;f<o.length;f++)if(!a[o[f]]){var s=t.expand[o[f]];if(s){s=u.isArray(s)?s:[s],a[o[f]]=!0;var l=n({clean:!1,seen:a},s);o.splice(f,1,l),o=u.flatten(o),f+=l.length-2}}u.each(o,function(e){r(e,c)})}),t.clean)for(var o=0;o<c.length;o++)"!"==c[o][0]&&(c.splice(o,1),o--);return c}function t(e,r){r=u.filter(r,function(e){return u.isString(e)});var t=u.clone(e);if(u.isObject(t.expand)){var a=i({clean:!1});u.each(t.expand,function(e,r){t.expand[r]=a(e)})}return function(){var e=r.concat(u.filter(Array.prototype.slice.call(arguments),function(e){return u.isString(e)}));return n(t,e)}}function i(){var e=arguments[0];return u.isObject(e)?t(arguments[0],Array.prototype.slice.call(arguments,1)):t({},Array.prototype.slice.call(arguments))()}var a=this,c=a.tagx,o="undefined"!=typeof require,u=a._;if("undefined"==typeof u){if(!o)throw new Error("tagx requires underscore, see http://underscorejs.org");u=require("underscore")}i.noConflict=function(){return a.tagx=c,i},"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=i),exports.tagx=i):a.tagx=i}).call(this);
//# sourceMappingURL=tagx-min.map